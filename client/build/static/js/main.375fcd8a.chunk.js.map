{"version":3,"sources":["pages/postManager/components/ExportCSV.js","config.js","utils/agent.js","utils/helper.js","components/filterSearch.js","pages/postManager/PostManager.js","pages/categoryManager/components/CreateNewModal.js","pages/categoryManager/components/TableCategories.js","pages/commentManager/components/CommentTable.js","pages/commentManager/CommentManger.js","pages/userManager/components/EditUser.js","pages/searchPost/SearchPost.js","constants/routers.js","pages/categoryManager/CategoryManager.js","pages/userManager/UserManager.js","pages/tokenManger/TokenManger.js","redux/consts/index.js","redux/actions/user.action.js","constants/menuItems.js","layouts/UserLayout.js","pages/login/LoginPage.js","App.js","reportWebVitals.js","redux/reducers/user.reducer.js","redux/reducers/index.js","index.js"],"names":["ExportCSVButton","typeExport","countExport","comments","csvData","_","reduce","result","comment","index","phoneNumberStr","map","get","phoneNumber","join","createdTime","moment","format","push","data","target","filename","style","color","configs","restAPIServer","axiosApiInstance","axios","create","baseURL","config","interceptors","request","use","a","accessToken","localStorage","getItem","headers","Authorization","error","Promise","reject","err","notification","message","getColumnSearchProps","filters","searchInput","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","placeholder","value","onChange","e","onPressEnter","width","marginBottom","display","type","onClick","icon","SearchOutlined","size","filterIcon","filtered","undefined","onFilter","record","filterString","filter","console","log","toLowerCase","includes","trim","onFilterDropdownVisibleChange","visible","setTimeout","select","Option","Select","CreateNewModal","isShowModal","setShowModal","useState","newCategoryFields","setNewCategoryFields","isOkLoading","setOkLoading","history","useHistory","title","onOk","name","description","isActive","agent","post","status","then","res","success","replace","window","location","reload","catch","finally","okText","cancelText","confirmLoading","onCancel","layout","validateMessages","required","onFieldsChange","changedFields","allFields","Item","label","rules","TextArea","defaultChecked","TableCategories","isLoading","setLoading","getCategories","setCategories","helper","useEffect","categories","columns","dataIndex","key","sorter","b","createdAt","unix","render","localeCompare","totalPost","text","filterMultiple","isEqual","Math","round","random","item","id","put","onChangeStatus","_id","onConfirm","delete","shape","DeleteOutlined","dataSource","loading","CommentTable","setComments","getComments","href","rel","postId","split","note","from","gender","UserOutlined","mobile_phone","PhoneOutlined","contents","rows","defaultValue","cols","resize","minWidth","onMouseLeave","newNote","find","onChangeNote","flexDirection","justifyContent","checkedChildren","EyeOutlined","unCheckedChildren","EyeInvisibleOutlined","isView","next","LinkOutlined","backgroundColor","commentId","newComments","remove","rowClassName","RangePicker","DatePicker","CommentManger","props","setFroms","groupBy","setPost","getPostInfo","catergories","froms","selectedCatergory","setSelectedCategory","selectedFrom","setSelectedFrom","startOf","endOf","dateRange","setDateRange","isDisableDateRangePicker","setDisableDateRangePicker","isReloadingComment","setReloadingComment","isModalVisible","setModalVisable","configExports","setConfigExport","queryCategory","queryFrom","startDate","endDate","params","categoryId","toDate","AlertMessage","postInfo","content","src","pictures","alt","trigger","className","subTitle","margin","span","dislay","marginRight","subtract","date","showSearch","marginTop","catergory","marginLeft","disabled","float","RedoOutlined","spin","DownloadOutlined","footer","form","htmlType","initialValues","length","EditUser","me","user","isShow","setShow","getUsers","setAddLoading","Form","useForm","username","fullName","limitPost","roles","expiresDate","intitalValues","resetFields","SyncOutlined","fields","onFinish","values","placeholde","min","Password","validator","resolve","Group","checked","isAfter","routers","path","strict","component","getPosts","setPosts","setCatergories","setAnalytics","posts","isAddLoading","totalComment","totalPhoneNumber","totalUsedPost","totalLeftPost","analytics","lastScanCommentAt","sumBy","fromPhoneNumberCount","last7daysComments","i","day","count","isBefore","currentDayComment","currentDayPhone","height","autoFit","reverse","interactions","adjust","position","shared","fixed","to","updatedPosts","PlusOutlined","gutter","xs","xl","valueStyle","prefix","SketchOutlined","AlertOutlined","CommentOutlined","scroll","x","pagination","defaultPageSize","showSizeChanger","pageSizeOptions","remember","allowClear","isShowCreateModal","setShowCreateModal","CommentManager","connect","state","ownProps","users","setUsers","isShowEditUserModal","setShowEditUserModal","userEdit","setUserEdit","sort","role","tagColor","EditOutlined","updatedUsers","getTokens","setTokens","tokens","groupTokenByStatus","uid","token","cover","Meta","avatar","contants","UPDATE_USER_INFO","LOGOUT","SIGN_IN","constants","menus","FileTextOutlined","subMenus","DatabaseOutlined","UserAddOutlined","KeyOutlined","Header","Layout","Content","Sider","Footer","dispatch","updateUserInfo","info","userAction","pathname","useLocation","matchSubMenu","menuItems","subMenu","breakpoint","collapsedWidth","theme","fontWeight","fill","xmlns","viewBox","d","fontSize","clear","mode","defaultSelectedKeys","defaultOpenKeys","SubMenu","menu","intersection","isSelected","minHeight","router","textAlign","LoginPage","offset","bordered","password","refreshToken","setItem","tailLayout","valuePropName","wrapperCol","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","userReducers","action","combineReducers","userReducer","store","createStore","reducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.375fcd8a.chunk.js","sourcesContent":["import React from \"react\"\nimport _ from \"lodash\"\nimport moment from \"moment\";\nimport { CSVLink } from \"react-csv\";\n\nexport default function ExportCSVButton ({typeExport, countExport, comments}) {\n\n    if (countExport && typeExport) {\n      let csvData = [];\n      switch (typeExport) {\n        case \"full_csv\":\n          csvData = _.reduce(\n            comments,\n            (result, comment, index) => {\n              if (index >= countExport) return result;\n              let phoneNumberStr = _.map(\n                _.get(comment, \"contents.phoneNumbers\", []),\n                (phoneNumber) => {\n                  return phoneNumber;\n                }\n              ).join(\"\\n\");\n\n              if (_.get(comment, \"from.mobile_phone\")) {\n                phoneNumberStr += \"\\n\" + _.get(comment, \"from.mobile_phone\");\n              }\n\n              const createdTime = moment(comment.createdTime).format(\n                \"DD/MM/YYYY \\n HH:mm \"\n              );\n              result.push([\n                createdTime,\n                _.get(comment, \"post.postId\", \"\"),\n                _.get(comment, \"from.id\", \"\"),\n                _.get(comment, \"from.name\", \"\"),\n                _.get(comment, \"contents.message\", \"\"),\n                phoneNumberStr,\n                _.get(comment, \"note\", \"\"),\n              ]);\n              return result;\n            },\n            [[\"Thời gian\", \"PostId\", \"UID\", \"Name\", \"Comment\", \"SDT\", \"Note\"]]\n          );\n\n          break;\n        case \"only_uid_name_csv\":\n          csvData = _.reduce(\n            comments,\n            (result, comment, index) => {\n              if (index >= countExport) return result;\n              let phoneNumberStr = _.map(\n                _.get(comment, \"contents.phoneNumbers\", []),\n                (phoneNumber) => {\n                  return phoneNumber;\n                }\n              ).join(\"\\n\");\n\n              if (_.get(comment, \"from.mobile_phone\")) {\n                phoneNumberStr += \"\\n\" + _.get(comment, \"from.mobile_phone\");\n              }\n\n              result.push([\n                _.get(comment, \"from.id\", \"\"),\n                _.get(comment, \"from.name\", \"\"),\n                _.get(comment, \"contents.message\", \"\"),\n                phoneNumberStr,\n              ]);\n              return result;\n            },\n            [[\"UID\", \"Name\", \"Comment\", \"Name\"]]\n          );\n          break;\n        default:\n          break;\n      }\n      return (\n        <CSVLink\n          data={csvData}\n          target=\"_blank\"\n          filename={`comment_${moment().format(\"MM:ss_DD-MM-YYYY\")}.csv`}\n          style={{ color: \"white\" }}\n        >\n          {\" \"}\n          Tải về\n        </CSVLink>\n      );\n    }\n    return <></>;\n  };","const apiURL =\n  process.env.NODE_ENV === \"production\"\n    ? \"http://hotdatafb.com/api\"\n    : \"http://localhost:3003\";\nconst configs = {\n  restAPIServer: apiURL,\n};\nexport default configs;\n","import axios from \"axios\";\nimport config from \"../config\";\nconst axiosApiInstance = axios.create({\n  baseURL: config.restAPIServer,\n});\n\naxiosApiInstance.interceptors.request.use(\n  async (config) => {\n    const accessToken = localStorage.getItem(\"access_token\");\n    if (accessToken) {\n      config.headers = {\n        Authorization: `Bearer ${accessToken}`,\n      };\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosApiInstance;\n","import { notification } from \"antd\";\nimport _ from \"lodash\";\nconst notifyError = (err) => {\n  return notification.error({\n    message: _.get(err, \"response.data.msg\", err.message),\n  });\n};\n\nexport default {\n  notifyError,\n};\n","import { Input, Button, Space } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport _ from \"lodash\";\nexport default function getColumnSearchProps(filters) {\n  var searchInput = \"\";\n  return {\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            searchInput = node;\n          }}\n          placeholder={`Tìm bất cứ thứ gì bạn muốn`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() => confirm()}\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => confirm()}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Tìm\n          </Button>\n          <Button\n            onClick={() => clearFilters()}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Đặt lại\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) => {\n      const filterString = _.map(filters, (filter) =>\n        _.get(record, filter, \"\")\n      ).join(\"\\t\");\n      console.log(filterString);\n      return filterString.toLowerCase().includes(value.trim().toLowerCase());\n    },\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.select(), 1000);\n      }\n    },\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { PageHeader, Row, Col, Modal, Statistic, Card } from \"antd\";\nimport {\n  PlusOutlined,\n  SyncOutlined,\n  SketchOutlined,\n  AlertOutlined,\n  CommentOutlined,\n  PhoneOutlined,\n  DeleteOutlined,\n  EyeOutlined,\n  DownloadOutlined,\n} from \"@ant-design/icons\";\nimport { Chart, Interval } from \"bizcharts\";\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport {\n  Form,\n  Input,\n  Button,\n  Tooltip,\n  Select,\n  notification,\n  Switch,\n  Table,\n  Popconfirm,\n  Tag,\n} from \"antd\";\nimport ExportCSV from \"./components/ExportCSV\";\nimport agent from \"../../utils/agent\";\nimport helper from \"../../utils/helper\";\nimport getColumnSearchProps from \"../../components/filterSearch\";\nimport { Link } from \"react-router-dom\";\n\nconst { Option } = Select;\n\nexport default function PostManager() {\n  const onFinishAddPost = (values) => {\n    setAddLoading(true);\n\n    agent\n      .post(\"/post\", values)\n      .then(() => {\n        notification.success({\n          message: \"Đã thêm bài viết\",\n        });\n        getPosts();\n      })\n      .catch(helper.notifyError)\n      .finally(() => {\n        setAddLoading(false);\n      });\n  };\n\n  const getAnalytics = () => {\n    agent\n      .get(\"/analytics\")\n      .then((res) => {\n        setAnalytics(res.data);\n      })\n      .catch(helper.notifyError);\n  };\n  const onDelete = (id) => {\n    agent\n      .delete(`/post/${id}`)\n      .then(() => {\n        notification.success({\n          message: \"Đã xóa !\",\n        });\n        const updatedPosts = _.remove(\n          posts,\n          (post) => !_.isEqual(post._id, id)\n        );\n        setPosts(updatedPosts);\n      })\n      .catch((err) => helper.notifyError(err));\n  };\n  const onChangeStatus = (isActive, id) => {\n    setLoading(true);\n    const status = isActive ? \"active\" : \"deactive\";\n    agent\n      .put(`/post/${id}/${status}`)\n      .then((res) => {\n        notification.success({\n          message: \"Đã cập nhật trạng thái !\",\n        });\n      })\n      .catch((err) => helper.notifyError(err))\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const getCategories = () => {\n    agent.get(\"/category\").then((res) => {\n      setCatergories(res.data);\n    });\n  };\n\n  const getPosts = () => {\n    setLoading(true);\n    agent\n      .get(\"/post\")\n      .then((res) => {\n        setPosts(res.data);\n      })\n      .catch(helper.notifyError)\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    getCategories();\n    getPosts();\n    getAnalytics();\n  }, []);\n  const [catergories, setCatergories] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [isAddLoading, setAddLoading] = useState(false);\n  const [isModalVisible, setModalVisable] = useState(false);\n  const [analytics, setAnalytics] = useState({\n    totalComment: 0,\n    totalPhoneNumber: 0,\n    totalPost: 0,\n    totalUsedPost: 0,\n    totalLeftPost: 0\n  });\n  const [isLoading, setLoading] = useState(false);\n  const columns = [\n    {\n      title: \"Quét lần cuối\",\n      dataIndex: \"lastScanCommentAt\",\n      key: \"lastScanCommentAt\",\n      width: \"100px\",\n      sorter: (a, b) =>\n        moment(a.lastScanCommentAt).unix() - moment(b.lastScanCommentAt).unix(),\n      render: (lastScanCommentAt) =>\n        moment(lastScanCommentAt).format(\"DD/MM/YYYY \\n HH:mm \"),\n    },\n    {\n      title: \"Post\",\n      dataIndex: \"content\",\n      key: \"content\",\n      width: \"300px\",\n      ...getColumnSearchProps([\n        \"postId\",\n        \"category.name\",\n        \"note\",\n        \"content.content\",\n      ]),\n      render: (content, item) => {\n        return (\n          <div>\n            {_.get(content, \"pictures.0\") ? (\n              <img src={content.pictures[0]} width={100} alt=\"image \" />\n            ) : (\n              <></>\n            )}{\" \"}\n            <br />\n            <b>ID Post: </b>{\" \"}\n            <a\n              href={`https://fb.com/${item.postId}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {item.postId}\n            </a>{\" \"}\n            <br />\n            <b>Chuyên mục: </b>{\" \"}\n            <a\n              href={`https://fb.com/${item.postId}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {_.get(item, \"category.name\", \"Không có\")}\n            </a>{\" \"}\n            <br />\n            <b>Ghi chú: </b> {item.note} <br /> <br />\n          </div>\n        );\n      },\n    },\n\n    {\n      title: \"Comments\",\n      dataIndex: \"comments\",\n      key: \"comments\",\n      width: \"5%\",\n      sorter: (a, b) => a.comments - b.comments,\n      render: (comments, item) => <Tag color=\"magenta\">{comments.length}</Tag>,\n    },\n    {\n      title: \"Phone\",\n      dataIndex: \"comments\",\n      key: \"comments\",\n      width: \"5%\",\n      sorter: (a, b) => a.comments - b.comments,\n      render: (comments, item) => {\n        const totalPhoneNumber = _.sumBy(comments, (comment) => {\n          const fromPhoneNumberCount = _.get(comment, \"from.mobile_phone\")\n            ? 1\n            : 0;\n          return (\n            _.get(comment, \"contents.phoneNumbers.length\", 0) +\n            fromPhoneNumberCount\n          );\n        });\n        return <Tag color=\"magenta\">{totalPhoneNumber}</Tag>;\n      },\n    },\n    {\n      title: \"Biểu đồ\",\n      dataIndex: \"comments\",\n      key: \"comments\",\n      width: \"350px\",\n      render: (comments, item) => {\n        /* Đoạn này có vẻ ko clean mấy */\n        let last7daysComments = [];\n        for (let i = 0; i < 7; i++) {\n          last7daysComments.push({\n            day: moment().subtract(i, \"day\").format(\"DD/MM\"),\n            type: \"comment\",\n            count: 0,\n          });\n        }\n        for (let i = 0; i < 7; i++) {\n          last7daysComments.push({\n            day: moment().subtract(i, \"day\").format(\"DD/MM\"),\n            type: \"phone\",\n            count: 0,\n          });\n        }\n\n        for (const comment of comments) {\n          if (\n            moment(comment.createdTime).isBefore(moment().subtract(7, \"days\"))\n          )\n            break;\n          let currentDayComment = _.find(last7daysComments, {\n            day: moment(comment.createdTime).format(\"DD/MM\"),\n            type: \"comment\",\n          });\n\n          if (currentDayComment) {\n            currentDayComment.count++;\n          }\n\n          let currentDayPhone = _.find(last7daysComments, {\n            day: moment(comment.createdTime).format(\"DD/MM\"),\n            type: \"phone\",\n          });\n          const fromPhoneNumberCount = _.get(comment, \"from.mobile_phone\")\n            ? 1\n            : 0;\n          if (currentDayComment) {\n            currentDayPhone.count +=\n              _.get(comment, \"contents.phoneNumbers.length\", 0) +\n              fromPhoneNumberCount;\n          }\n        }\n        return (\n          <Chart\n            height={250}\n            width={350}\n            autoFit\n            data={last7daysComments.reverse()}\n            interactions={[\"element-active\"]}\n          >\n            <Interval\n              adjust={[\n                {\n                  type: \"dodge\",\n                },\n              ]}\n              color=\"type\"\n              position=\"day*count\"\n            />\n            <Tooltip shared />\n          </Chart>\n        );\n      },\n    },\n    {\n      title: \"Hành động\",\n      dataIndex: \"_id\",\n      key: \"_id\",\n      width: 100,\n      fixed: \"right\",\n      render: (_id, item) => {\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              flexDirection: \"column\",\n              height: 100,\n            }}\n          >\n            <Button\n              style={{\n                backgroundColor: \"#2ecc71\",\n                color: \"white\",\n              }}\n              shape=\"round\"\n              icon={<DownloadOutlined />}\n              size=\"small\"\n            >\n              <ExportCSV\n                typeExport=\"full_csv\"\n                countExport={item.comments.length}\n                comments={item.comments}\n              />\n            </Button>\n\n            <Button\n              type=\"primary\"\n              shape=\"round\"\n              icon={<EyeOutlined />}\n              size=\"small\"\n            >\n              <Link to={\"/comment/\" + _id} style={{ color: \"white\" }}>\n                {\" \"}\n                Xem\n              </Link>\n            </Button>\n\n            <Switch\n              defaultChecked={item.status === \"active\"}\n              unCheckedChildren={\"OFF\"}\n              checkedChildren={\"ON\"}\n              style={{ width: \"100%\" }}\n              onChange={(isActive) => onChangeStatus(isActive, item._id)}\n            />\n            <Popconfirm\n              title=\"Bạn có chắc chắn muốn xóa ？\"\n              okText=\"Xóa\"\n              cancelText=\"Hủy\"\n              onConfirm={() => onDelete(_id)}\n            >\n              <Button\n                type=\"danger\"\n                shape=\"round\"\n                icon={<DeleteOutlined />}\n                size=\"small\"\n              >\n                Xóa\n              </Button>\n            </Popconfirm>\n          </div>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        title=\"Quản lý bài viết\"\n        subTitle={\n          <Tooltip title=\"Thêm danh mục mới\">\n            <Button\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<PlusOutlined />}\n              onClick={() => setModalVisable(true)}\n            />\n          </Tooltip>\n        }\n      />\n      <Row gutter={16}>\n        <Col span={6} xs={24} xl={4}>\n          <Card>\n            <Statistic\n              title=\"Tổng số post\"\n              value={analytics.totalPost}\n              valueStyle={{ color: \"#3f8600\" }}\n              prefix={<SketchOutlined />}\n            />\n          </Card>\n        </Col>\n        <Col span={6} xs={24} xl={4}>\n          <Card>\n            <Statistic\n              title=\"Số Post đã dùng\"\n              value={analytics.totalUsedPost}\n              valueStyle={{ color: \"#26de81\" }}\n              prefix={<AlertOutlined />}\n            />\n          </Card>\n        </Col>\n\n        <Col span={6} xs={24} xl={4}>\n          <Card>\n            <Statistic\n              title=\"Số Post còn lại\"\n              value={analytics.totalLeftPost}\n              valueStyle={{ color: \"#26de11\" }}\n              prefix={<AlertOutlined />}\n            />\n          </Card>\n        </Col>\n\n\n        <Col span={6} xs={24} xl={4}>\n          <Card>\n            <Statistic\n              title=\"Số bình luận\"\n              value={analytics.totalComment}\n              valueStyle={{ color: \"#9c88ff\" }}\n              prefix={<CommentOutlined />}\n            />\n          </Card>\n        </Col>\n        <Col span={6} xs={24} xl={4}>\n          <Card>\n            <Statistic\n              title=\"Tổng số phone\"\n              value={analytics.totalPhoneNumber}\n              valueStyle={{ color: \"#44bd32\" }}\n              prefix={<PhoneOutlined />}\n            />\n          </Card>\n        </Col>\n      </Row>\n      <br />\n      <Row>\n        <Col span={24}>\n          <Table\n            dataSource={posts}\n            columns={columns}\n            scroll={{ x: 100 }}\n            loading={isLoading}\n            pagination={{\n              defaultPageSize: 10,\n              showSizeChanger: true,\n              pageSizeOptions: [\"10\", \"20\", \"50\", \"100\"],\n            }}\n          />\n        </Col>\n      </Row>\n      <Modal\n        title=\"Thêm bài viết\"\n        visible={isModalVisible}\n        confirmLoading={isAddLoading}\n        onCancel={() => setModalVisable(false)}\n        footer={[\n          <Button key=\"back\" onClick={() => setModalVisable(false)}>\n            Đóng\n          </Button>,\n          <Button\n            form=\"formCreatePost\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            disabled={isAddLoading}\n          >\n            {isAddLoading ? (\n              <p>\n                <SyncOutlined spin /> Vui lòng đợi...\n              </p>\n            ) : (\n              \"Thêm bài viết\"\n            )}\n          </Button>,\n        ]}\n      >\n        <Form\n          layout=\"vertical\"\n          id=\"formCreatePost\"\n          name=\"basic\"\n          initialValues={{ remember: true }}\n          onFinish={onFinishAddPost}\n        >\n          <Form.Item\n            name=\"postId\"\n            label=\"Link bài viết cần quét comment\"\n            rules={[{ required: true, message: \"Vui lòng điền link bài viết\" }]}\n          >\n            <Input placeholder=\"https://www.facebook.com/nguyentri729/posts/843229586221364:0\" />\n          </Form.Item>\n\n          <Form.Item label=\"Ghi chú\" name=\"note\">\n            <Input placeholder=\"Ghi chú\" />\n          </Form.Item>\n\n          <Form.Item name=\"category\" label=\"Chuyên mục\">\n            <Select placeholder=\"Chọn danh mục bên dưới\" allowClear>\n              {catergories.map((catergory) => {\n                return <Option value={catergory._id}>{catergory.name}</Option>;\n              })}\n            </Select>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport { Form, Input, Modal, notification, Switch } from \"antd\";\nimport agent from \"../../../utils/agent\";\nexport default function CreateNewModal({ isShowModal, setShowModal }) {\n  const [newCategoryFields, setNewCategoryFields] = useState([]);\n  const [isOkLoading, setOkLoading] = useState(false);\n  let history = useHistory();\n  const handleCreateCategoryModal = () => {\n    const [name, description, isActive] = newCategoryFields;\n    if (!name || name.value === \"\") {\n      return;\n    }\n    setOkLoading(true);\n    agent\n      .post(\"/category\", {\n        name: name.value,\n        description: description.value,\n        status: isActive.value ? \"deactive\" : \"active\",\n      })\n      .then((res) => {\n        notification.success({\n          message: \"Đã tạo danh mục \",\n        });\n        history.replace(\"/category-manager\")\n     //   history.push(\"/category-manager\")\n         window.location.reload();\n     //\n        setShowModal(false);\n      })\n      .catch((err) => {\n        notification.error({\n          message: err.message,\n        });\n      })\n      .finally(() => {\n        setOkLoading(false);\n      });\n  };\n\n  return (\n    <Modal\n      title=\"Tạo danh mục mới\"\n      visible={isShowModal}\n      onOk={handleCreateCategoryModal}\n      okText=\"Tạo\"\n      cancelText=\"Đóng\"\n      confirmLoading={isOkLoading}\n      onCancel={() => setShowModal(false)}\n    >\n      <Form\n        layout=\"vertical\"\n        validateMessages={{\n          required: \"${label} không được để trống\",\n        }}\n        onFieldsChange={(changedFields, allFields) => {\n          setNewCategoryFields(allFields);\n        }}\n      >\n        <Form.Item\n          name={[\"category\", \"name\"]}\n          label=\"Tên danh mục \"\n          rules={[{ required: true }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item name={[\"category\", \"description\"]} label=\"Miêu tả \">\n          <Input.TextArea />\n        </Form.Item>\n\n        <Form.Item name={[\"category\", \"status\"]} label=\"Hoạt động \">\n          <Switch defaultChecked />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Table, notification, Button, Switch, Popconfirm, Tag } from \"antd\";\nimport moment from \"moment\";\nimport _ from \"lodash\"\nimport agent from \"../../../utils/agent\";\nimport helper from \"../../../utils/helper\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\n\nexport default function TableCategories() {\n  const [isLoading, setLoading ] = useState(false)\n  const getCategories = () => {\n    setLoading(true)\n    agent\n    .get(\"/category\")\n    .then((res) => {\n      setCategories(res.data);\n    })\n    .catch(helper.notifyError).finally(() => {\n      setLoading(false)\n    });\n  }\n  useEffect(() => {\n    getCategories()\n  }, []);\n  const onChangeStatus = (isActive, id) => {\n    const status = isActive ? \"active\" : \"deactive\";\n    agent.put(`/category/${id}/${status}`).then(res => {\n      notification.success({\n        message: \"Đã cập nhật trạng thái !\"\n      })\n    }).catch(err => helper.notifyError(err));\n  };\n  const onDelete = (id) => {\n    agent.delete(`/category/${id}`).then(res => {\n      notification.success({\n        message: \"Đã xóa !\"\n      })\n      getCategories()\n    }).catch(err => helper.notifyError(err));\n  }\n  const [categories, setCategories] = useState([]);\n  const columns = [\n    {\n      title: \"Thời gian tạo\",\n      dataIndex: \"createdAt\",\n      key: \"createdAt\",\n      sorter: (a, b) => moment(a.createdAt).unix() - moment(b.createdAt).unix(),\n      render: (createdAt) => moment(createdAt).format(\"DD/MM/YYYY \\n HH:mm \"),\n    },\n    {\n      title: \"Tên danh mục\",\n      dataIndex: \"name\",\n      key: \"name\",\n      render: (name) => <p>{name}</p>,\n      sorter: (a, b) => a.name.localeCompare(b.name)\n\n    },\n    {\n      title: \"Miêu tả\",\n      dataIndex: \"description\",\n      key: \"description\",\n      sorter: (a, b) => a.name.localeCompare(b.name)\n\n    },\n    {\n      title: \"Tổng bài viết\",\n      dataIndex: \"totalPost\",\n      key: \"totalPost\",\n      sorter: (a, b) => a.totalPost - b.totalPost,\n      render: (totalPost) => {\n         return <Tag color=\"cyan\">{totalPost}</Tag>\n      }\n    },\n    {\n      title: \"Trạng thái\",\n      dataIndex: \"status\",\n      filters: [\n        {\n          text: 'Hoạt động',\n          value: 'active',\n        },\n        {\n          text: 'Tạm dừng',\n          value: 'deactive',\n        },\n      ],\n      filterMultiple: false,\n      onFilter: (value, record) => _.isEqual(record.status, value),\n      key: \"status\" + Math.round(Math.random() * 6),\n      render: (status, item) => {\n        console.log({status})\n        return (\n          <Switch\n            defaultChecked={_.isEqual(status, \"active\")}\n            onChange={(isActive) => onChangeStatus(isActive, item._id)}\n          />\n        );\n      },\n    },\n    {\n      title: \"Hành động\",\n      dataIndex: \"_id\",\n      key: \"_id\",\n      render: (_id, item) => {\n        return (\n          <> <Popconfirm title=\"Bạn có chắc chắn muốn xóa ？\" okText=\"Xóa\" cancelText=\"Hủy\" onConfirm = {() => onDelete(_id)}>\n          <Button\n              type=\"danger\"\n              shape=\"round\"\n              icon={<DeleteOutlined />}\n              size=\"small\"\n            >\n              Xóa\n            </Button>\n        </Popconfirm>\n            \n          </>\n        );\n      },\n    },\n  ];\n\n  return <Table columns={columns} dataSource={categories} loading={isLoading}/>;\n}\n","import React from \"react\";\nimport {\n  Table,\n  Tag,\n  Input,\n  Switch,\n  Button,\n  Popconfirm,\n  notification,\n} from \"antd\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport agent from \"../../../utils/agent\";\nimport helper from \"../../../utils/helper\";\nimport {\n  EyeOutlined,\n  EyeInvisibleOutlined,\n  LinkOutlined,\n  DeleteOutlined,\n  PhoneOutlined,\n  UserOutlined,\n} from \"@ant-design/icons\";\nimport getColumnSearchProps from \"../../../components/filterSearch\"\nexport default function CommentTable({ comments, isLoading, setComments, getComments }) {\n  const onDelete = (id) => {\n    agent\n      .delete(`/comment/${id}`)\n      .then((res) => {\n        notification.success({\n          message: \"Đã xóa !\",\n        });\n        let newComments = _.remove(comments, comment => !_.isEqual(comment._id, id))\n        setComments(newComments)\n      })\n      .catch((err) => helper.notifyError(err));\n  };\n\n  const onChangeNote = (id, note) => {\n      agent.put(`/comment/${id}/note`, {note}).then(res => {\n         notification.success({\n            message: \"Đã lưu\",\n          });\n\n          let currentComment = _.find(comments, comment => _.isEqual(comment._id, id))\n          currentComment.note = note;\n          setComments(comments)\n      }).catch(helper.notifyError)\n  }\n\n  \n  const onChangeStatus = (isActive, id) => {\n    const status = isActive ? \"active\" : \"deactive\";\n    agent.put(`/comment/${id}/${status}`).then(() => {\n      // _.find(comments, comment => _.isEqual(comment._id, id)).isView = isActive\n      // setComments(comments)\n      setComments((comments, next) => {\n        return _.map(comments, comment => {\n          if (_.isEqual(comment._id, id)) {\n            comment.isView = isActive\n          }\n          return comment\n        })\n      })\n    // getComments()\n    }).catch(err => helper.notifyError(err));\n        \n  };\n\n\n  const columns = [\n    {\n      title: \"STT\",\n      key: 'index' + Math.random(),\n      width: \"20px\",\n      render:  (text, record, index) => {\n        console.log(index)\n        return index + 1\n      },\n    },\n    {\n      title: \"Thời gian tạo\",\n      dataIndex: \"createdTime\",\n      width: \"50px\",\n      key: \"createdTime\",\n      sorter: (a, b) => moment(a.createdTime).unix() - moment(b.createdTime).unix(),\n      render: (createdTime) =>\n        moment(createdTime).format(\"DD/MM/YYYY \\n HH:mm \"),\n    },\n    {\n      title: \"Page\",\n      dataIndex: \"post\",\n      width: \"200px\",\n      ...getColumnSearchProps([\"post.from.id\", \"post.from.name\", \"post.postId\", \"post.note\"]),\n      key: \"post\",\n      render: (post, comment) => {\n        return (\n          <>\n           <b>ID: </b>{\" \"}\n            <a href={\"https://fb.com/\" +  _.get(post, \"from.id\", \"\")} target=\"_blank\" rel=\"noreferrer\">\n              {_.get(post, \"from.id\", \"\")}\n            </a>{\" \"}\n            <br />\n            <b>Tên: </b> <span>{_.get(post, \"from.name\")}</span> <br />\n            <b>Post: </b>{\" \"}\n            <a href={\"https://fb.com/\" + post.postId} target=\"_blank\" rel=\"noreferrer\">\n              {post.postId.split(\"_\")[1]}\n            </a>{\" \"}\n            <br />\n            <b>Ghi chú: </b> <span> {post.note}</span> <br />\n          </>\n        );\n      },\n    },\n    {\n      title: \"Thông tin\",\n      dataIndex: \"from\",\n       ...getColumnSearchProps(['from.id', 'from.name', \"from.mobile_phone\", \"from.location.0.name\"]),\n      width: \"200px\",\n      key: \"from\",\n      render: (from, comment) => {\n        return (\n          <>\n            <b>UID: </b>{\" \"}\n            <a href={\"https://fb.com/\" + from.id} target=\"_blank\" rel=\"noreferrer\">\n              {from.id}\n            </a>{\" \"}\n            <br />\n            <b>Tên: </b>\n            <span>{_.get(from, \"name\")}</span>{\" \"}\n\n\n          {from.gender === \"male\" ?  <Tag color=\"cyan\">\n                <UserOutlined /> Nam\n              </Tag> : (<></>)} \n              {from.gender === \"female\" ?  <Tag color=\"geekblue\">\n                <UserOutlined /> Nữ\n              </Tag> : (<></>)} \n\n            \n            <br />\n            <b>Phone: </b>{\" \"}\n            {from.mobile_phone ? (\n              <Tag color=\"cyan\">\n                <PhoneOutlined /> {from.mobile_phone.replace(\"+84\", \"0\")}\n              </Tag>\n            ) : (\n              <></>\n            )}{\" \"}\n            <br />\n            {_.map(\n              _.get(comment, \"contents.phoneNumbers\", []),\n              (phoneNumber) => {\n                return (\n                  <Tag color=\"cyan\">\n                    <PhoneOutlined /> {phoneNumber}\n                  </Tag>\n                );\n              }\n            )}\n            <br />\n            <b>Khu vực: </b>{\" \"}\n            <span> {_.get(from, \"location.0.name\", \"Đang cập nhật...\")}</span>{\" \"}\n            <br />\n          </>\n        );\n      },\n    },\n\n    {\n      title: \"Bình luận\",\n      dataIndex: \"contents\",\n      key: \"contents\",\n      width: \"200px\",\n      ...getColumnSearchProps(['contents.message']),\n      render: (contents) => {\n        return <p>{contents.message}</p>;\n      },\n    },\n    {\n      title: \"Ghi chú\",\n      dataIndex: \"note\",\n      key: \"note\",\n      width: \"20%\",\n      ...getColumnSearchProps(['note']),\n      render: (note, comment) => {\n        return (\n          <Input.TextArea\n            rows={4}\n            placeholder=\"Nhập ghi chú...\"\n            defaultValue={note}\n            cols=\"10\"\n            style={{\n              resize: \"vertical\",\n              minWidth: \"200px\",\n              width: \"100%\"\n            }}\n            onMouseLeave = {(e ) => {\n                const newNote = _.get(e, \"target.value\", \"\")\n                const oldNote = _.get(comment, \"note\", \"\")\n                if (oldNote !== newNote)  onChangeNote(comment._id, newNote)\n              \n                \n            }}\n          ></Input.TextArea>\n        );\n      },\n    },\n    {\n      title: \"Hành động\",\n      dataIndex: \"_id\",\n      key: \"_id\",\n      width: \"50px\",\n      render: (_id, comment) => {\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Switch\n              checkedChildren={<><EyeOutlined /> <span>Xem</span></>}\n              unCheckedChildren={<><span>Chưa</span> <EyeInvisibleOutlined /> </>}\n              style={{ marginBottom: 10 }}\n              key={_id}\n              defaultChecked={comment.isView}\n              onChange = {(isActive) => onChangeStatus(isActive, comment._id)}\n            />\n\n            <Button\n              type=\"default\"\n              size=\"small\"\n              shape=\"round\"\n             \n              icon={<LinkOutlined />}\n              style={{ marginBottom: 10, backgroundColor: \"#20bf6b\" }}\n            >\n              <a\n                href={\"https://fb.com/\" + comment.commentId}\n                target=\"_blank\" rel=\"noreferrer\"\n                style={{ color: \"white\" }}\n                \n              >\n                {\" \"}\n                Xem\n              </a>\n            </Button>\n            <Popconfirm\n              title=\"Bạn có chắc chắn muốn xóa ？\"\n              okText=\"Xóa\"\n              cancelText=\"Hủy\"\n              onConfirm={() => onDelete(_id)}\n            >\n              <Button\n                type=\"danger\"\n                size=\"small\"\n                shape=\"round\"\n                icon={<DeleteOutlined />}\n              >\n                Xóa\n              </Button>\n            </Popconfirm>\n          </div>\n        );\n      },\n    },\n  ];\n\n  return <Table dataSource={comments} loading= { isLoading} columns={columns} rowClassName={(record) => {\n    if (record.isView) {\n      return \"row-hightlight\"\n    }\n  }} />;\n}\n","import React, { useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\nimport {\n  SearchOutlined,\n  RedoOutlined,\n  DownloadOutlined,\n} from \"@ant-design/icons\";\n\nimport CommentTable from \"./components/CommentTable\";\nimport agent from \"../../utils/agent\";\nimport helper from \"../../utils/helper\";\nimport {\n  PageHeader,\n  Button,\n  Modal,\n  Select,\n  DatePicker,\n  Row,\n  Col,\n  Form,\n  InputNumber,\n  Alert,\n  Divider,\n  Popover,\n} from \"antd\";\n\nimport { CSVLink } from \"react-csv\";\n\nconst { RangePicker } = DatePicker;\nconst { Option } = Select;\n\nexport default function CommentManger(props) {\n  const getCategories = () => {\n    agent\n      .get(\"/category\")\n      .then((res) => {\n        setCategories(res.data);\n      })\n      .catch(helper.notifyError);\n  };\n\n  const getPosts = () => {\n    agent\n      .get(\"/post\")\n      .then((res) => {\n        setFroms(_.groupBy(res.data, \"from.id\"));\n      })\n      .catch(helper.notifyError);\n  };\n\n  const onRefreshComments = () => {\n    setReloadingComment(true);\n    agent\n      .get(\"/post/refresh-comments\")\n      .then((res) => {\n        getComments();\n      })\n      .catch(helper.notifyError)\n      .finally(() => {\n        setReloadingComment(false);\n      });\n  };\n\n  const getPostInfo = () => {\n    const postId = _.get(props, \"match.params.postId\");\n    agent\n      .get(\"/post/\" + postId)\n      .then((res) => {\n        setPost(res.data);\n      })\n      .catch(helper.notifyError);\n  };\n  useEffect(() => {\n    getComments();\n    getCategories();\n    getPosts();\n    if (_.get(props, \"match.params.postId\")) {\n      getPostInfo();\n    }\n  }, []);\n\n  const [catergories, setCategories] = useState([]);\n  const [froms, setFroms] = useState([]);\n  const [selectedCatergory, setSelectedCategory] = useState();\n  const [selectedFrom, setSelectedFrom] = useState();\n  const [dateRange, setDateRange] = useState([\n    moment().startOf(\"day\"),\n    moment().endOf(\"day\"),\n  ]);\n  const [isDisableDateRangePicker, setDisableDateRangePicker] = useState(true);\n  const [isLoading, setLoading] = useState(true);\n  const [isReloadingComment, setReloadingComment] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [isModalVisible, setModalVisable] = useState(false);\n  const [configExports, setConfigExport] = useState({\n    typeExport: \"full_csv\",\n    countExport: _.get(comments, \"length\", 0),\n  });\n  const [post, setPost] = useState();\n  const ExportCSVButton = () => {\n    const { typeExport, countExport } = configExports;\n\n    if (countExport && typeExport) {\n      let csvData = [];\n      switch (typeExport) {\n        case \"full_csv\":\n          csvData = _.reduce(\n            comments,\n            (result, comment, index) => {\n              if (index >= countExport) return result;\n              let phoneNumberStr = _.map(\n                _.get(comment, \"contents.phoneNumbers\", []),\n                (phoneNumber) => {\n                  return phoneNumber;\n                }\n              ).join(\"\\n\");\n\n              if (_.get(comment, \"from.mobile_phone\")) {\n                phoneNumberStr += \"\\n\" + _.get(comment, \"from.mobile_phone\");\n              }\n\n              const createdTime = moment(comment.createdTime).format(\n                \"DD/MM/YYYY \\n HH:mm \"\n              );\n              result.push([\n                createdTime,\n                _.get(comment, \"post.postId\", \"\"),\n                _.get(comment, \"from.id\", \"\"),\n                _.get(comment, \"from.name\", \"\"),\n                _.get(comment, \"contents.message\", \"\"),\n                phoneNumberStr,\n                _.get(comment, \"note\", \"\"),\n              ]);\n              return result;\n            },\n            [[\"Thời gian\", \"PostId\", \"UID\", \"Name\", \"Comment\", \"SDT\", \"Note\"]]\n          );\n\n          break;\n        case \"only_uid_name_csv\":\n          csvData = _.reduce(\n            comments,\n            (result, comment, index) => {\n              if (index >= countExport) return result;\n              let phoneNumberStr = _.map(\n                _.get(comment, \"contents.phoneNumbers\", []),\n                (phoneNumber) => {\n                  return phoneNumber;\n                }\n              ).join(\"\\n\");\n\n              if (_.get(comment, \"from.mobile_phone\")) {\n                phoneNumberStr += \"\\n\" + _.get(comment, \"from.mobile_phone\");\n              }\n\n              result.push([\n                _.get(comment, \"from.id\", \"\"),\n                _.get(comment, \"from.name\", \"\"),\n                _.get(comment, \"contents.message\", \"\"),\n                phoneNumberStr,\n              ]);\n              return result;\n            },\n            [[\"UID\", \"Name\", \"Comment\", \"Name\"]]\n          );\n          break;\n        default:\n          break;\n      }\n      return (\n        <CSVLink\n          data={csvData}\n          target=\"_blank\"\n          filename={`comment_${moment().format(\"MM:ss_DD-MM-YYYY\")}.csv`}\n          style={{ color: \"white\" }}\n        >\n          {\" \"}\n          Tải xuống\n        </CSVLink>\n      );\n    }\n    return <></>;\n  };\n\n  const getComments = () => {\n    const queryCategory =\n      selectedCatergory === \"all\" ? null : selectedCatergory;\n    const queryFrom = selectedFrom === \"all\" ? null : selectedFrom;\n    const [startDate, endDate] = dateRange;\n    setLoading(true);\n    agent\n      .get(\"/comments\", {\n        params: {\n          categoryId: queryCategory,\n          from: queryFrom,\n          postId: _.get(props, \"match.params.postId\"),\n          startDate: startDate.toDate(),\n          endDate: endDate.toDate(),\n        },\n      })\n      .then((res) => {\n        setComments(res.data);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const onSelectDataRange = (type) => {\n    switch (type) {\n      case \"today\":\n        setDateRange([moment().startOf(\"day\"), moment().endOf(\"day\")]);\n        setDisableDateRangePicker(true);\n        break;\n      case \"yesterday\":\n        setDateRange([\n          moment().subtract(1, \"day\").startOf(\"day\"),\n          moment().subtract(1, \"day\").endOf(\"day\"),\n        ]);\n        setDisableDateRangePicker(true);\n        break;\n      case \"week\":\n        setDateRange([moment().startOf(\"week\"), moment().endOf(\"week\")]);\n        setDisableDateRangePicker(true);\n        break;\n      case \"lastWeek\":\n        setDateRange([\n          moment().subtract(1, \"week\").startOf(\"week\"),\n          moment().subtract(1, \"week\").endOf(\"week\"),\n        ]);\n        setDisableDateRangePicker(true);\n        break;\n      case \"month\":\n        setDateRange([moment().startOf(\"month\"), moment().endOf(\"month\")]);\n        setDisableDateRangePicker(true);\n        break;\n      default:\n        setDisableDateRangePicker(false);\n        break;\n    }\n  };\n\n  const onFindComment = () => {\n    getComments();\n  };\n\n  const AlertMessage = ({ postInfo }) => {\n    return (\n      <Popover\n        content={\n          <div>\n            {_.get(postInfo.content, \"pictures.0\") ? (\n              <img\n                src={postInfo.content.pictures[0]}\n                width={100}\n                alt=\"image \"\n              />\n            ) : (\n              <></>\n            )}{\" \"}\n            <br />\n            <br />\n            <b>ID Post: </b>{\" \"}\n            <a\n              href={`https://fb.com/${postInfo.postId}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {postInfo.postId}\n            </a>{\" \"}\n            <br />\n            <b>Chuyên mục: </b>{\" \"}\n            <a\n              href={`https://fb.com/${postInfo.postId}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {_.get(postInfo, \"category.name\", \"Không có\")}\n            </a>{\" \"}\n            <br />\n            <b>Ghi chú: </b> {postInfo.note} <br /> <br />\n          </div>\n        }\n        title=\"Thông tin bài viết\"\n        trigger=\"hover\"\n      >\n        <Alert\n          message={\n            <p>\n              Bạn đang xem bình luận của bài viết có ID:{\" \"}\n              <b>{postInfo.postId}</b>\n            </p>\n          }\n          type=\"info\"\n        />\n      </Popover>\n    );\n  };\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        title=\"Quản lý bình luận\"\n        subTitle=\"Tất cả bình luận quét được\"\n      />\n\n      <Row style={{ margin: \"0 25px\" }}>\n        {post ? (\n          <>\n            <AlertMessage postInfo={post} />\n            <Divider />\n          </>\n        ) : (\n          <></>\n        )}\n\n        <p>\n          Bạn đang quét tất cả comment từ ngày đến{\" \"}\n          <b> {dateRange[0].format(\"DD/MM/YYYY\")} </b> -{\" \"}\n          <b>{dateRange[1].format(\"DD/MM/YYYY\")}</b>{\" \"}\n        </p>\n        <Col\n          span={24}\n          style={{\n            dislay: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Select\n            placeholder=\"Thời gian\"\n            defaultValue=\"today\"\n            style={{ marginRight: 20 }}\n            onChange={onSelectDataRange}\n          >\n            <Option value=\"custom\">Tuỳ chỉnh</Option>\n            <Option value=\"today\">Hôm nay</Option>\n            <Option value=\"yesterday\">Hôm qua</Option>\n            <Option value=\"week\">Tuần này </Option>\n            <Option value=\"lastWeek\">Tuần trước </Option>\n            <Option value=\"month\">Tháng này </Option>\n          </Select>\n          {!isDisableDateRangePicker ? (\n            <RangePicker\n              format=\"DD/MM/YYYY\"\n              defaultValue={dateRange}\n              onChange={(date) => setDateRange(date)}\n            />\n          ) : (\n            <></>\n          )}\n          {!_.get(props, \"match.params.postId\") ? (\n            <>\n              <Select\n                placeholder=\"Bài viết của\"\n                showSearch\n                defaultValue=\"all\"\n                style={{ margin: \"0 20px\", width: \"200px\" }}\n                onChange={setSelectedFrom}\n              >\n                <Option value=\"all\">Bài viết của</Option>\n\n                {_.map(froms, (from, key) => {\n                  return (\n                    <Option value={key} key={key}>\n                      {_.get(from, \"0.from.name\", \"Unknown\")}\n                    </Option>\n                  );\n                })}\n              </Select>\n              <Select\n                placeholder=\"Danh mục\"\n                defaultValue=\"all\"\n                style={{ marginRight: 20, marginTop: 20, width: \"200px\" }}\n                onChange={setSelectedCategory}\n              >\n                <Option value=\"all\">Tất cả danh mục</Option>\n                {_.map(catergories, (catergory) => {\n                  return (\n                    <Option value={catergory._id} key={catergory._id}>\n                      {catergory.name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </>\n          ) : (\n            <></>\n          )}\n\n          <Button\n            type=\"primary\"\n            style={{ marginLeft: 10 }}\n            onClick={onFindComment}\n            icon={<SearchOutlined />}\n            disabled={isLoading}\n          >\n            Tìm\n          </Button>\n          <br />\n          <div style={{ float: \"right\", marginTop: 30 }}>\n            <Button\n              type=\"primary\"\n              style={{ marginRight: 10 }}\n              icon={<RedoOutlined spin={isReloadingComment} />}\n              disabled={isReloadingComment || isLoading}\n              onClick={onRefreshComments}\n            >\n              {\" \"}\n              {isReloadingComment ? \"Đang làm mới...\" : \"Làm mới danh sách\"}\n            </Button>\n            <Button\n              type=\"primary\"\n              icon={<DownloadOutlined />}\n              onClick={() => setModalVisable(true)}\n            >\n              Lưu về máy\n            </Button>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <CommentTable\n            comments={comments}\n            getComments={getComments}\n            isLoading={isLoading || isReloadingComment}\n            setComments={setComments}\n            getComments={getComments}\n          />\n        </Col>\n      </Row>\n\n      <Modal\n        title=\"Tải dữ liệu về máy\"\n        visible={isModalVisible}\n        onCancel={() => setModalVisable(false)}\n        footer={[\n          <Button key=\"back\" onClick={() => setModalVisable(false)}>\n            Đóng\n          </Button>,\n          <Button\n            form=\"formExportCSV\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            icon={<DownloadOutlined />}\n          >\n            <ExportCSVButton />\n          </Button>,\n        ]}\n      >\n        <Form\n          layout=\"vertical\"\n          id=\"formExportCSV\"\n          name=\"basic\"\n          initialValues={{\n            typeExport: \"full_csv\",\n          }}\n        >\n          <Form.Item\n            name=\"typeExport\"\n            label=\"Phần mở rộng\"\n            rules={[\n              { required: true, message: \"Ko được để trống trường này !\" },\n            ]}\n          >\n            <Select\n              onChange={(typeExport) => {\n                setConfigExport({\n                  typeExport,\n                  countExport: _.get(configExports, \"countExport\"),\n                });\n              }}\n            >\n              <Option value=\"full_csv\">Full thông tin (.csv)</Option>\n              <Option value=\"only_uid_name_csv\">\n                Chỉ Uid/name/phone/cmt (.csv)\n              </Option>\n              {/* <Option value=\"full_txt\">\n                  Full thông tin (.txt)\n                </Option>\n                <Option value=\"only_uid_name_txt\">Chỉ Uid/name/phone/cmt (.txt)</Option> */}\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            name=\"countExport\"\n            label=\"Số lượng\"\n            rules={[\n              { required: true, message: \"Ko được để trống trường này !\" },\n            ]}\n          >\n            <InputNumber\n              placeholder={`Có tất cả ${comments.length} comments có thể tải về`}\n              style={{ width: \"100%\" }}\n              onChange={(countExport) => {\n                setConfigExport({\n                  countExport,\n                  typeExport: _.get(configExports, \"typeExport\"),\n                });\n              }}\n            />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { SyncOutlined } from \"@ant-design/icons\";\nimport _ from \"lodash\";\nimport {\n  Form,\n  Input,\n  Button,\n  InputNumber,\n  Switch,\n  Checkbox,\n  Modal,\n  DatePicker,\n} from \"antd\";\n\nimport moment from \"moment\";\nimport agent from \"../../../utils/agent\";\nimport helper from \"../../../utils/helper\";\n\nfunction EditUser({ me, user, isShow, setShow, getUsers }) {\n  const [isLoading, setAddLoading] = useState(false);\n\n  function onFinishEditUser(values) {\n    setAddLoading(true);\n    agent\n      .put(\"/user/\" + user._id, values)\n      .then((res) => {\n        getUsers();\n        setShow(false);\n      })\n      .catch((err) => helper.notifyError(err))\n      .finally(() => {\n        setAddLoading(false);\n      });\n  }\n  const [form] = Form.useForm();\n\n  const { username, status, fullName, limitPost, roles, expiresDate } = user;\n  let intitalValues = [\n    {\n      name: [\"username\"],\n      value: username,\n    },\n    {\n      name: [\"active\"],\n      value: status === \"active\" ? true : false,\n    },\n    {\n      name: [\"fullName\"],\n      value: fullName,\n    },\n    {\n      name: [\"limitPost\"],\n      value: limitPost,\n    },\n    {\n      name: [\"roles\"],\n      value: roles,\n    },\n    {\n      name: [\"expiresDate\"],\n      value: moment(expiresDate),\n    },\n  ];\n  return (\n    <Modal\n      title=\"Chỉnh sửa người dùng\"\n      visible={isShow}\n      confirmLoading={isLoading}\n      onCancel={() => {\n        form.resetFields()\n        setShow(false)\n      }}\n      footer={[\n        <Button key=\"back\" onClick={() =>  {\n          form.resetFields() \n          setShow(false)\n        }\n        }>\n          Đóng\n        </Button>,\n        <Button\n          form=\"formCreateUser\"\n          type=\"primary\"\n          htmlType=\"submit\"\n          disabled={isLoading}\n        >\n          {isLoading ? (\n            <p>\n              <SyncOutlined spin /> Vui lòng đợi...\n            </p>\n          ) : (\n            \"Cập nhật\"\n          )}\n        </Button>,\n      ]}\n    >\n      <Form\n        layout=\"vertical\"\n        id=\"formCreateUser\"\n        form ={form}\n        name=\"basic\"\n        fields={intitalValues}\n        onFinish={onFinishEditUser}\n      >\n        <Form.Item\n          name=\"username\"\n          label=\"Email đăng nhập\"\n          rules={[\n            {\n              type: \"email\",\n              message: \"Vui lòng điền email\",\n            },\n            { required: true, message: \"Ko được để trống trường này !\" },\n          ]}\n          value={user.username}\n        >\n          <Input placeholde=\"Username\" disabled={true} />\n        </Form.Item>\n\n        <Form.Item\n          name=\"fullName\"\n          label=\"Tên đầy đủ\"\n          rules={[{ required: true, message: \"Ko được để trống trường này !\" },\n       \n          { min: 6, message: \"Mật khẩu phải tối thiểu 6 ký tự\" }\n        ]}\n        >\n          <Input placeholde=\"Tên đầy đủ\" />\n        </Form.Item>\n\n\n\n        <Form.Item\n          name=\"password\"\n          label=\"Mật khẩu\"\n          \n        >\n          <Input.Password placeholder=\"Điền trống để ko đổi mật khẩu\" />\n        </Form.Item>\n\n\n        <Form.Item\n          name=\"limitPost\"\n          label=\"Giới hạn post\"\n          rules={[\n            { required: true, message: \"Ko được để trống trường này !\" },\n            () => ({\n              validator(_, value) {\n                if (!value || value < 5) {\n                  return Promise.reject(\"Giới hạn post phải lớn hơn 5 bài. \");\n                }\n                return Promise.resolve();\n              },\n            }),\n          ]}\n        >\n          <InputNumber placeholde=\"Giới hạn post\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"roles\"\n          label=\"Quyền\"\n          rules={[{ required: true, message: \"Ko được để trống trường này !\" }]}\n        >\n          <Checkbox.Group>\n            {_.get(me, \"roles\", []).includes(\"admin\") ? (\n              <>\n                <Checkbox value=\"super-user\">Super User</Checkbox>\n                <Checkbox value=\"admin\">Admin</Checkbox>\n                <Checkbox value=\"user\">Normal User</Checkbox>\n              </>\n            ) : (\n              <Checkbox value=\"user\" checked>Normal User</Checkbox>\n            )}\n          </Checkbox.Group>\n        </Form.Item>\n\n        <Form.Item name=\"active\" label=\"Trạng thái\">\n          <Switch defaultChecked />\n        </Form.Item>\n\n        <Form.Item\n          name=\"expiresDate\"\n          label=\"Ngày hết hạn\"\n          rules={[\n            {\n              required: true,\n              message: \"Thiếu ngày hết hạn\",\n            },\n            () => ({\n              validator(_, value) {\n                if (moment(value).isAfter(moment())) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(\n                  \"Ngày hết hạn phải lớn hơn thời gian hiện tại\"\n                );\n              },\n            }),\n          ]}\n        >\n          <DatePicker format=\"DD/MM/YYYY\" />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n\n\n\nexport default EditUser\n","import React from \"react\";\nimport { Input, Row, Col, DatePicker, Button, Avatar, Card } from \"antd\";\n\nconst SearchPost = () => {\n  const onSearch = () => {};\n  return (\n      <Row>\n        <Col span={20}>\n         <Input type=\"text\" placeholder=\"Nhập từ khóa cần tìm kiếm...\" />\n          <DatePicker.RangePicker style={{width: \"100%\", marginTop: 20}}/> \n        </Col>\n\n        <Col span={4}>\n            <Button type=\"primary\" style={{\n                height: \"50px\",\n                marginLeft: \"20px\"\n            }}>Tìm kiếm</Button> \n        </Col>\n        <Col span={24} style={{marginTop: 50}}>\n\n        <Card\n    style={{ width: 300 }}\n    cover={\n      <img\n        alt=\"example\"\n        src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n      />\n    }\n  >\n    <Card.Meta\n      avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n      title=\"Card title\"\n      description=\"This is the description\"\n    />\n\n    <div>\n        <span>created at: </span>\n        <span>created at: </span>\n        <span>created at: </span>\n    </div>\n  </Card>\n\n        </Col>\n      </Row>\n  );\n};\n\nexport default SearchPost;\n","import PostManager from \"../pages/postManager/PostManager\"\nimport CategoryManager from \"../pages/categoryManager/CategoryManager\"\nimport CommentManager from \"../pages/commentManager/CommentManger\"\nimport UserManager  from \"../pages/userManager/UserManager\"\nimport TokenManager  from \"../pages/tokenManger/TokenManger\"\nimport SearchPost from \"../pages/searchPost/SearchPost\"\nconst routers = [\n  \n  {\n    path: \"/post-manager\",\n    name: \"Post manager\",\n    strict: true,\n    component: PostManager ,\n  },\n  {\n    path: \"/category-manager\",\n    name: \"category manager\",\n    strict: true,\n    component: CategoryManager ,\n  },\n  {\n    path: \"/comment-manager\",\n    name: \"Comment manager\",\n    strict: false,\n    component: CommentManager ,\n  },\n  {\n    path: \"/comment-manager\",\n    name: \"Comment manager\",\n    component: CommentManager ,\n  },\n  {\n    path: \"/comment/:postId\",\n    name: \"Comment\",\n    component: CommentManager ,\n  },\n\n  {\n    path: \"/user-manager\",\n    name: \"User manager\",\n    strict: true,\n    component: UserManager  ,\n  },\n\n  {\n    path: \"/token-manager\",\n    name: \"Token manager\",\n    strict: true,\n    component: TokenManager  ,\n  }\n,\n\n{\n  path: \"/search-posts\",\n  name: \"Search post\",\n  strict: true,\n  component: SearchPost  ,\n}\n];\n\nexport default routers;\n","import React, { useState } from \"react\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { PageHeader, Button, Tooltip } from \"antd\";\nimport CreateNewModal from \"./components/CreateNewModal\";\nimport TableCategories from \"./components/TableCategories\"\nexport default function CategoryManager() {\n  const [isShowCreateModal, setShowCreateModal] = useState(false);\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        title=\"Quản lý danh mục\"\n        subTitle={\n          <Tooltip title=\"Thêm danh mục mới\">\n            <Button\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<PlusOutlined />}\n              onClick={() => setShowCreateModal(true)}\n            />\n          </Tooltip>\n        }\n      />\n\n      <CreateNewModal\n        isShowModal={isShowCreateModal}\n        setShowModal={setShowCreateModal}\n      />\n\n      <TableCategories />\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { PageHeader, Modal, InputNumber } from \"antd\";\nimport { PlusOutlined, SyncOutlined, DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\n\nimport {\n  Form,\n  Input,\n  Button,\n  Tooltip,\n  notification,\n  Switch,\n  Table,\n  Popconfirm,\n  Tag,\n  Checkbox,\n  DatePicker\n} from \"antd\";\nimport EditUser from \"./components/EditUser\"\nimport agent from \"../../utils/agent\";\nimport helper from \"../../utils/helper\";\nimport { connect } from \"react-redux\";\n\nfunction PostManager({me}) {\n  const [form] = Form.useForm();\n  const [users, setUsers] = useState([]);\n  const [isModalVisible, setModalVisable] = useState(false);\n  const [isAddLoading, setAddLoading] = useState(false);\n  const [isShowEditUserModal, setShowEditUserModal] = useState(false)\n  const [userEdit, setUserEdit] = useState({})\n  const onDelete = (id) => {\n    agent\n      .delete(`/user/${id}`)\n      .then(() => {\n        notification.success({\n          message: \"Đã xóa !\",\n        });\n        let updatedUsers = _.remove(users, (user) => !_.isEqual(user._id, id));\n        setUsers(updatedUsers);\n      })\n      .catch((err) => helper.notifyError(err));\n  };\n  const getUsers = () => {\n    agent\n      .get(\"/user\")\n      .then((res) => {\n        setUsers(res.data);\n      })\n      .catch(helper.notifyError);\n  };\n  const onFinishAddPost = (values) => {\n    setAddLoading(true);\n    agent\n      .post(\"/user/create\", values)\n      .then(() => {\n        notification.success({\n          message: \"Đã tạo người dùng\",\n        });\n      })\n      .catch(helper.notifyError)\n      .finally(() => {\n        form.resetFields();\n        setAddLoading(false);\n        setTimeout(() => setModalVisable(false), 500);\n      });\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const columns = [\n    {\n      title: \"Thời gian tạo\",\n      dataIndex: \"createdAt\",\n      key: \"createdAt\",\n      sorter: (a, b) => moment(a.createdAt).unix() - moment(b.createdAt).unix(),\n      render: (createdAt) => moment(createdAt).format(\"DD/MM/YYYY \\n HH:mm \"),\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"username\",\n      key: \"username\",\n    },\n    {\n      title: \"Tên \",\n      dataIndex: \"fullName\",\n      key: \"fullName\",\n    },\n    {\n      title: \"Giới hạn post\",\n      dataIndex: \"limitPost\",\n      key: \"limitPost\",\n    },\n    {\n      title: \"Roles\",\n      dataIndex: \"roles\",\n      key: \"roles\",\n      render: (roles) => {\n        return (\n          <>\n            {_.map(roles.sort(), (role) => {\n              let tagColor;\n              switch (role) {\n                case \"admin\":\n                  tagColor = \"gold\";\n                  break;\n                case \"user\":\n                  tagColor = \"green\";\n                  break;\n                default:\n                  tagColor = \"geekblue\";\n                  break;\n              }\n              return <Tag color={tagColor}>{role}</Tag>;\n            })}\n          </>\n        );\n      },\n    },\n    {\n      title: \"Thời gian hết hạn\",\n      dataIndex: \"expiresDate\",\n      key: \"expiresDate\",\n      sorter: (a, b) => moment(a.expiresDate).unix() - moment(b.expiresDate).unix(),\n      render: (expiresDate) => moment(expiresDate).format(\"DD/MM/YYYY \"),\n    },\n    \n    {\n      title: \"Hành động\",\n      dataIndex: \"_id\",\n      key: \"_id\",\n      render: (_id, user) => {\n        return (\n\n          <>\n\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              shape=\"round\"\n              icon={<EditOutlined />}\n              onClick={() => {\n                setShowEditUserModal(true)\n                setUserEdit(user)\n              }}\n            >\n              Sửa\n            </Button>\n\n\n          <Popconfirm\n            title=\"Bạn có chắc chắn muốn xóa ？\"\n            okText=\"Xóa\"\n            cancelText=\"Hủy\"\n            onConfirm={() => onDelete(_id)}\n          >\n            <Button\n              type=\"danger\"\n              size=\"small\"\n              shape=\"round\"\n              icon={<DeleteOutlined />}\n            >\n              Xóa\n            </Button>\n          </Popconfirm>\n\n\n          </>\n        );\n      },\n    },\n  ];\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        title=\"Quản lý người dùng\"\n        subTitle={\n          <Tooltip title=\"Thêm người dùng\">\n            <Button\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<PlusOutlined />}\n              onClick={() => setModalVisable(true)}\n            />\n          </Tooltip>\n        }\n      />\n      <Table columns={columns} dataSource={users} />\n\n      <EditUser\n        isShow={isShowEditUserModal}\n        user={userEdit}\n        setShow={setShowEditUserModal}\n        getUsers={getUsers}\n        me={me}\n      />\n      <Modal\n        title=\"Thêm người dùng\"\n        visible={isModalVisible}\n        confirmLoading={isAddLoading}\n        onCancel={() => setModalVisable(false)}\n        footer={[\n          <Button key=\"back\" onClick={() => setModalVisable(false)}>\n            Đóng\n          </Button>,\n          <Button\n            form=\"formCreateUser\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            disabled={isAddLoading}\n          >\n            {isAddLoading ? (\n              <p>\n                <SyncOutlined spin /> Vui lòng đợi...\n              </p>\n            ) : (\n              \"Thêm\"\n            )}\n          </Button>,\n        ]}\n      >\n        <Form\n          layout=\"vertical\"\n          id=\"formCreateUser\"\n          name=\"basic\"\n          initialValues={{ remember: true }}\n          onFinish={onFinishAddPost}\n        >\n          <Form.Item\n            name=\"username\"\n            label=\"Email đăng nhập\"\n            rules={[\n              {\n                type: \"email\",\n                message: \"Vui lòng điền email\",\n              },\n              { required: true, message: \"Ko được để trống trường này !\" },\n            ]}\n          >\n            <Input placeholde=\"Username\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            label=\"Mật khẩu\"\n            rules={[\n              { required: true, message: \"Ko được để trống trường này !\" },\n            ]}\n          >\n            <Input.Password placeholde=\"Mật khẩu\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"fullName\"\n            label=\"Tên đầy đủ\"\n            rules={[\n              { required: true, message: \"Ko được để trống trường này !\" },\n            ]}\n          >\n            <Input placeholde=\"Tên đầy đủ\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"limitPost\"\n            label=\"Giới hạn post\"\n            rules={[\n              { required: true, message: \"Ko được để trống trường này !\" },\n              () => ({\n                validator(_, value) {\n                  if (!value || value < 5) {\n                    return Promise.reject(\"Giới hạn post phải lớn hơn 5 bài. \");\n                  }\n                  return Promise.resolve();\n                },\n              }),\n            ]}\n          >\n            <InputNumber placeholde=\"Giới hạn post\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"roles\"\n            label=\"Quyền\"\n            rules={[\n              { required: true, message: \"Ko được để trống trường này !\" },\n            ]}\n          >\n            <Checkbox.Group>\n            {_.get(me, \"roles\", []).includes(\"admin\") ? (\n              <>\n                <Checkbox value=\"super-user\">Super User</Checkbox>\n                <Checkbox value=\"admin\">Admin</Checkbox>\n                <Checkbox value=\"user\" defaultChecked={true}>Normal User</Checkbox>\n              </>\n            ) : (\n              <Checkbox value=\"user\" checked>Normal User</Checkbox>\n            )}\n            </Checkbox.Group>\n          </Form.Item>\n          <Form.Item\n            name=\"expiresDate\"\n            label=\"Ngày hết hạn\"\n            rules={[\n              {\n                required: true,\n                message: \"Thiếu ngày hết hạn\",\n              },\n              () => ({\n                validator(_, value) {\n                  if (moment(value).isAfter(moment())) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    \"Ngày hết hạn phải lớn hơn thời gian hiện tại\"\n                  );\n                },\n              }),\n            ]}\n          >\n            <DatePicker format=\"DD/MM/YYYY\" />\n          </Form.Item>\n          <Form.Item name=\"active\" label=\"Trạng thái\">\n            <Switch defaultChecked />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    me: state.user,\n  };\n};\n\nexport default connect(mapStateToProps)(PostManager);\n","import React, { useState, useEffect } from \"react\";\nimport { PageHeader, Row, Col, Modal, Statistic, Card } from \"antd\";\nimport {\n  PlusOutlined,\n  SyncOutlined,\n  SketchOutlined,\n  AlertOutlined,\n  CommentOutlined,\n  RedoOutlined,\n} from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport { Form, Input, Button, Tooltip, notification, Table, Tag } from \"antd\";\nimport agent from \"../../utils/agent\";\nimport helper from \"../../utils/helper\";\n\nexport default function PostManager() {\n  const onFinishAddPost = (values) => {\n    setAddLoading(true);\n    const { tokens } = values;\n    agent\n      .post(\"/token/add\", values)\n      .then((res) => {\n        notification.success({\n          message: `Đã thêm thành công ${res.data.length} / ${\n            tokens.split(\"\\n\").length\n          }`,\n        });\n        getTokens();\n      })\n      .catch(helper.notifyError)\n      .finally(() => {\n        setAddLoading(false);\n      });\n  };\n\n  const checkAccessToken = () => {\n    setLoading(true);\n    agent\n      .get(\"/token/check\")\n      .then((res) => {\n        notification.success({\n          message: \"Đã làm mới token thành công !\",\n        });\n        getTokens();\n      })\n      .catch(helper.notifyError)\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const getTokens = () => {\n    agent\n      .get(\"/tokens\")\n      .then((res) => {\n        setTokens(res.data);\n      })\n      .catch(helper.notifyError);\n  };\n\n  useEffect(() => {\n    getTokens();\n  }, []);\n  const [isAddLoading, setAddLoading] = useState(false);\n  const [isModalVisible, setModalVisable] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [tokens, setTokens] = useState([]);\n  const groupTokenByStatus = _.groupBy(tokens, \"status\");\n\n  const columns = [\n    {\n      title: \"Thời gian tạo\",\n      dataIndex: \"createdAt\",\n      key: \"createdAt\",\n      sorter: (a, b) => moment(a.createdAt).unix() - moment(b.createdAt).unix(),\n      render: (createdAt) => moment(createdAt).format(\"DD/MM/YYYY \\n HH:mm \"),\n    },\n    {\n      title: \"UID\",\n      dataIndex: \"uid\",\n      sorter: (a, b) => a.uid.localeCompare(b.uid),\n      key: \"uid\",\n    },\n    {\n      title: \"Tên\",\n      sorter: (a, b) => a.name.localeCompare(b.name),\n\n      dataIndex: \"name\",\n      key: \"name\",\n    },\n    {\n      title: \"Token\",\n      dataIndex: \"accessToken\",\n      key: \"accessToken\",\n\n      render: (token) => {\n        return <Input.TextArea value={token} />;\n      },\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      sorter: (a, b) => a.status.localeCompare(b.status),\n      render: (status) => {\n        return (\n          <>\n            {status === \"live\" ? (\n              <Tag color=\"geekblue\">Live</Tag>\n            ) : (\n              <Tag color=\"red\">Die</Tag>\n            )}\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        title=\"Quản lý token\"\n        subTitle={\n          <Tooltip title=\"Thêm token mới\">\n            <Button\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<PlusOutlined />}\n              onClick={() => setModalVisable(true)}\n            />\n          </Tooltip>\n        }\n      />\n      <Row gutter={16}>\n        <Col span={9}>\n          <Card>\n            <Statistic\n              title=\"Tổng token\"\n              value={_.get(tokens, \"length\", 0)}\n              valueStyle={{ color: \"#3f8600\" }}\n              prefix={<SketchOutlined />}\n            />\n          </Card>\n        </Col>\n        <Col span={9}>\n          <Card>\n            <Statistic\n              title=\"Token live\"\n              value={_.get(groupTokenByStatus, \"live.length\", 0)}\n              valueStyle={{ color: \"#26de81\" }}\n              prefix={<AlertOutlined />}\n            />\n          </Card>\n        </Col>\n        <Col span={6}>\n          <Card>\n            <Statistic\n              title=\"Token die\"\n              value={_.get(groupTokenByStatus, \"die.length\", 0)}\n              valueStyle={{ color: \"#red\" }}\n              prefix={<CommentOutlined />}\n            />\n          </Card>\n        </Col>\n      </Row>\n      <br />\n\n      <Button\n        type=\"primary\"\n        style={{ marginBottom: \"20px\", float: \"right\" }}\n        icon={<RedoOutlined spin={isLoading} />}\n        disabled={isLoading}\n        onClick={checkAccessToken}\n      >\n        {\" \"}\n        {isLoading ? \"Đang làm mới...\" : \"Làm mới danh sách\"}\n      </Button>\n\n      <br />\n      <Table columns={columns} dataSource={tokens} />\n\n      <Modal\n        title=\"Thêm token mới\"\n        visible={isModalVisible}\n        confirmLoading={isAddLoading}\n        onCancel={() => setModalVisable(false)}\n        footer={[\n          <Button key=\"back\" onClick={() => setModalVisable(false)}>\n            Đóng\n          </Button>,\n          <Button\n            form=\"formAddToken\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            disabled={isAddLoading}\n          >\n            {isAddLoading ? (\n              <p>\n                <SyncOutlined spin /> Vui lòng đợi...\n              </p>\n            ) : (\n              \"Thêm\"\n            )}\n          </Button>,\n        ]}\n      >\n        <Form\n          layout=\"vertical\"\n          id=\"formAddToken\"\n          name=\"basic\"\n          initialValues={{ remember: true }}\n          onFinish={onFinishAddPost}\n        >\n          <Form.Item\n            label=\"Danh sách token\"\n            name=\"tokens\"\n            rules={[\n              { required: true, message: \"Vui lòng nhập list access_token\" },\n            ]}\n          >\n            <Input.TextArea\n              placeholder=\"Mỗi token cách nhau bằng dấu xuống dòng\"\n              rows={6}\n            />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </>\n  );\n}\n","const contants = {\n  UPDATE_USER_INFO: \"UPDATE_USER_INFO\",\n  LOGOUT: \"LOGOUT\",\n  SIGN_IN: \"SIGN_IN\",\n};\nexport default contants\n","import constants from \"../consts/index\";\nconst updateUserInfo = (data) => {\n  return {\n    type: constants.UPDATE_USER_INFO,\n    data,\n  };\n};\n\nexport default {\n  updateUserInfo,\n};\n","import {\n  FileTextOutlined,\n  UserAddOutlined,\n  CommentOutlined,\n  DatabaseOutlined,\n  KeyOutlined,\n} from \"@ant-design/icons\";\n\nconst menus = [\n  {\n    type: \"sub-menu\",\n    key: \"scan-comments\",\n    name: \"Quét bình luận ẩn\",\n    icon: <FileTextOutlined />,\n    roles: [\"user\", \"super-user\", \"admin\"],\n    subMenus: [\n      {\n        path: \"/post-manager\",\n        name: \"Bài viết\",\n        icon: <FileTextOutlined />,\n        roles: [\"user\", \"super-user\", \"admin\"],\n      },\n      {\n        path: \"/comment-manager\",\n        name: \"Bình luận\",\n        icon: <CommentOutlined />,\n        roles: [\"user\", \"super-user\", \"admin\"],\n      },\n      {\n        path: \"/category-manager\",\n        name: \"Danh mục\",\n        icon: <DatabaseOutlined />,\n        roles: [\"user\", \"super-user\", \"admin\"],\n      },\n    ],\n  },\n\n  \n  // {\n  //   path: \"/search-posts\",\n  //   type: \"menu-item\",\n  //   name: \"Tìm kiếm bài viết\",\n  //   icon: <UserAddOutlined />,\n  //   roles: [\"admin\", \"user\"],\n  // },\n  {\n    path: \"/user-manager\",\n    type: \"menu-item\",\n    name: \"Quản lý người dùng\",\n    icon: <UserAddOutlined />,\n    roles: [\"admin\", \"super-user\"],\n  },\n\n  {\n    path: \"/token-manager\",\n    type: \"menu-item\",\n    name: \"Quản lý token\",\n    icon: <KeyOutlined />,\n    roles: [\"admin\"],\n  },\n\n\n \n\n];\n\nexport default menus;\n","import { Layout, Menu, Avatar, Button, Divider } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";import \"../App.css\";\nimport \"../App.css\";\nimport routers from \"../constants/routers\";\nimport {   Switch, Route, Link, useLocation } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport _ from \"lodash\";\nimport moment from \"moment\"\nimport userAction from \"../redux/actions/user.action\";\nimport agent from \"../utils/agent\";\nimport menuItems from \"../constants/menuItems\"\n\nconst { Header, Content, Sider, Footer } = Layout;\nfunction UserLayout({ user, updateUserInfo}) {\n\n  let history = useHistory();\n  if (!localStorage.getItem(\"access_token\")) history.push(\"/login\");\n\n  useEffect(() => {\n    agent.get(\"/user/me\").then((res) => {\n      updateUserInfo(res.data)\n    });\n  }, []);\n\n  let {pathname} = useLocation();\n  \n  const matchSubMenu = _.find(menuItems, item => {\n    if (item.type === 'sub-menu') {\n      const mathMenu = _.find(item.subMenus, subMenu => {\n        if (subMenu.path === pathname) return true\n        return false\n      })\n      if(mathMenu) return true\n      return false\n    }\n  })\n  return (\n    <Layout>\n      <Sider\n        breakpoint=\"lg\"\n        collapsedWidth=\"0\"\n        theme=\"light\"\n      >  \n\n        <div className=\"logo\">\n          <h3 style={{fontWeight: \"bold\", color: \"#1890ff\"}}><svg style={{fill: \"#1890ff\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" color=\"#1890ff\" viewBox=\"0 0 24 24\"><path d=\"M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z\"/></svg> HOTDATAFB.COM</h3>\n        </div>\n\n        <div style={{  marginLeft: 10, display: \"flex\", flexDirection: \"row\", backgroundColor: \"#dff9fb\", padding: 10}}>\n          <Avatar\n            size={\"large\"}\n            icon={<UserOutlined />}\n          />\n          <div className=\"user-info\" style={{ marginLeft: 25}}>\n             <span>{_.get(user, \"username\", \"unkown\")}</span>  <br /> \n               <small>HSD: <b>{moment(user.expiresDate).format(\"DD/MM/YYYY\")}</b></small>  <br /> \n              <Button type=\"link\" style={{marginTop: \"-28px\", marginLeft: \"-15px\", fontSize: 13}} onClick={() => {\n                localStorage.clear();\n                window.location = \"/login\"\n              }}>Đăng xuất</Button>\n          </div>\n          </div>\n\n        <Menu theme=\"light\" mode=\"inline\" \n        defaultSelectedKeys = {[pathname]}\n        defaultOpenKeys={[_.get(matchSubMenu, \"key\", \"\")]}\n        >\n          {menuItems.map((item, index) => {\n            if (item.type === \"sub-menu\") {\n              return ( <Menu.SubMenu key={item.key} icon={item.icon} title={item.name}>\n                 {_.map(item.subMenus, menu => {\n                   if (_.intersection(menu.roles, user.roles).length > 0) {\n                    return (\n                     \n                      <Menu.Item key={menu.path} icon={menu.icon} isSelected={true}>\n                        <Link to={menu.path}>{menu.name}</Link>\n                      </Menu.Item>\n                    )\n                  }\n                 })}\n              </Menu.SubMenu>)\n            }\n              if (_.intersection(item.roles, user.roles).length > 0) {\n                return (\n                  <Menu.Item key={item.path} icon={item.icon} isSelected={true}>\n                    <Link to={item.path}>{item.name}</Link>\n                  </Menu.Item>\n                 \n                )\n              }\n             \n          })}\n        </Menu>\n      </Sider>\n      <Layout>\n        <Header\n          className=\"site-layout-sub-header-background\"\n          style={{ padding: 0 }}\n        >\n          \n        </Header>\n        <Content style={{ margin: \"24px 16px 0\", minHeight: \"750px\" }}>\n          <div\n            className=\"site-layout-background\"\n            style={{ padding: 24, minHeight: 360 }}\n          >\n            <Switch>\n              {routers.map((router) => {\n                return <Route path={router.path} component={router.component} />\n              })}\n\n            </Switch>\n          </div>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>\n          {/* Created by nguyentri729 */}\n        </Footer>\n      </Layout>\n    </Layout>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateUserInfo: (info) => {\n      dispatch(userAction.updateUserInfo(info));\n    },\n  };\n};\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserLayout);\n","import { Row, Col } from \"antd\";\nimport React, { useState } from \"react\";\nimport { Form, Input, Button, Checkbox, Card, notification } from \"antd\";\nimport agent from \"../../utils/agent\";\nimport { useHistory } from \"react-router\";\nimport _ from \"lodash\";\nexport default function LoginPage() {\n  let history = useHistory();\n  if (localStorage.getItem(\"access_token\")) history.push(\"/comment-manager\");\n  const onFinish = (values) => {\n    const { username, password } = values;\n    setLoading(true);\n    agent\n      .post(\"/login\", { username: username, password: password })\n      .then((res) => {\n        const { accessToken, refreshToken } = res.data;\n        if (accessToken && refreshToken) {\n          localStorage.setItem(\"access_token\", accessToken);\n          localStorage.setItem(\"refresh_token\", refreshToken);\n          notification.success({\n            message: \"Đăng nhập thành công\",\n          });\n          history.push(\"/comment-manager\");\n        }\n      })\n      .catch((err) => {\n        notification.error({\n          message: \"Đăng nhập thất bại\",\n          description: _.get(err, \"response.data.msg\", err.message),\n        });\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n  const [isLoading, setLoading] = useState(false);\n\n  return (\n    <Row>\n      <Col span={12} offset={6} style={{ marginTop: \"5%\" }}>\n        <Card bordered={true}>\n          <Form\n            layout=\"vertical\"\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n          >\n            <center>\n              <h1 style={{ fontWeight: \"bold\", color: \"#1890ff\" }}>\n                <svg\n                  style={{ fill: \"#1890ff\" }}\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"25\"\n                  height=\"25\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path d=\"M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z\" />\n                </svg>{\" \"}\n                HOTDATAFB.COM\n              </h1>\n            </center>\n\n            <Form.Item\n              label=\"Tên đăng nhập\"\n              name=\"username\"\n              rules={[\n                { required: true, message: \"Vui lòng điền tên đăng nhập\" },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Mật khẩu\"\n              name=\"password\"\n              rules={[{ required: true, message: \"Vui lòng điền mật khẩu\" }]}\n            >\n              <Input.Password />\n            </Form.Item>\n\n            <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n              <Checkbox>Nhớ đăng nhập</Checkbox>\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n                Đăng nhập\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n","import React from \"react\";\nimport UserLayout from \"./layouts/UserLayout\";\nimport { useLocation } from \"react-router-dom\";\nimport LoginPage from \"./pages/login/LoginPage\"\n\nexport default function App() {\n  const location = useLocation()\n  return (\n  <>\n        {location.pathname === '/login' ? <LoginPage /> : <UserLayout /> }\n  </>\n  );\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import contants from \"../consts/index\";\nconst userReducers = (state = {}, action) => {\n  switch (action.type) {\n    case contants.UPDATE_USER_INFO:\n      state = action.data;\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default userReducers","import { combineReducers } from \"redux\";\nimport userReducer from \"./user.reducer\";\n\nexport default combineReducers({\n  user: userReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./redux/reducers/index\"\nconst store = createStore(reducer)\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}